datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum AuthAttemptType {
  LOGIN
  OTP
}

model User {
  id         String       @id @default(cuid(2))
  email      String       @unique
  firstName  String?
  lastName   String?
  // `user` or `admin`
  role       String       @default("user")
  sessions   Session[]
  createdAt  DateTime     @default(now())
}

model Session {
  hashedToken   String   @id
  userId        String
  expiresAt     DateTime
  createdAt     DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model MagicToken {
  hashedToken  String   @id 
  hashedOtp    String?
  deviceId     String
  email        String
  expiresAt    DateTime
  createdAt    DateTime @default(now())
}

model AuthAttempt {
  id         String          @id @default(uuid())
  email      String?
  ipAddress  String
  userAgent  String?
  type       AuthAttemptType
  success    Boolean
  createdAt  DateTime        @default(now())

  @@index([email])
  @@index([ipAddress])
  @@index([type, createdAt])
  @@index([ipAddress, userAgent, type, createdAt])
}
